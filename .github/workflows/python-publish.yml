# This workflow will upload a Python Package using Twine when a release is created

name: Upload Python Package

on:
  push:
    tags:
      - '*'
  
jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        
    - name: Clean Pre
      run: rm -rf dist/ MANIFEST

    - name: Clean
      run: git checkout smartystreets_python_sdk_version/__init__.py

    - name: Dependencies
      run: python3 -m pip install -r requirements.txt
        
    - name: Install dependencies
      run: python -m pip install --upgrade pip

    - name: Install Build
      run: pip install build
        
    - name: Test
      run: python3 -m unittest discover -p *_test.py

    - name: Package
      run: python3 setup.py sdist

#    - name: Grab Version
#      run: echo "__version__=" >> smartystreets_python_sdk_version/__init__.py && $(shell tagit -p --dry-run) >> smartystreets_python_sdk_version/__init__.py

    - name: Check out
      run: git checkout "smartystreets_python_sdk_version/__init__.py"
#
#    - name: Publish twine
#      run: twine upload dist/* -u smartystreets -p ${{ secrets.PYPI_PASSWORD }}

#    - name: Release
#      run: tagit -p && git push origin --tags

    - name: Build package
      run: python -m build

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Publish package to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
